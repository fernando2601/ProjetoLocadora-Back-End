// <auto-generated />
using System;
using Api.Infraestrutura.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Infraestrutura.Migrations
{
    [DbContext(typeof(ApiContexto))]
    partial class ApiContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Model.Models.Carros", b =>
                {
                    b.Property<int>("IdCarro")
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasMaxLength(11);

                    b.Property<int>("IdLocadora")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.HasKey("IdCarro");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("Api.Model.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Renda")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Api.Model.Models.Locacao", b =>
                {
                    b.Property<int?>("IdLocacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2")
                        .HasMaxLength(11);

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasMaxLength(50);

                    b.Property<int>("LocadoraId")
                        .HasColumnType("int");

                    b.HasKey("IdLocacao");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.HasIndex("LocadoraId");

                    b.ToTable("Locacao");
                });

            modelBuilder.Entity("Api.Model.Models.LocacaoCarro", b =>
                {
                    b.Property<int>("IdCarro")
                        .HasColumnType("int");

                    b.Property<int?>("IdLocacao")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2")
                        .HasMaxLength(11);

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasMaxLength(11);

                    b.Property<double>("Preco")
                        .HasColumnType("float")
                        .HasMaxLength(11);

                    b.Property<DateTime>("Renovacao")
                        .HasColumnType("datetime2")
                        .HasMaxLength(20);

                    b.HasKey("IdCarro", "IdLocacao");

                    b.HasIndex("IdLocacao");

                    b.ToTable("LocacoesCarros");
                });

            modelBuilder.Entity("Api.Model.Models.Locadora", b =>
                {
                    b.Property<int>("IdLocadora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.HasKey("IdLocadora");

                    b.ToTable("Locadoras");
                });

            modelBuilder.Entity("Api.Model.Models.Carros", b =>
                {
                    b.HasOne("Api.Model.Models.Locadora", "Locadora")
                        .WithMany("Carros")
                        .HasForeignKey("IdCarro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.Model.Models.Locacao", b =>
                {
                    b.HasOne("Api.Model.Models.Cliente", "Cliente")
                        .WithOne("Locacao")
                        .HasForeignKey("Api.Model.Models.Locacao", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Model.Models.Locadora", "Locadora")
                        .WithMany("Locacoes")
                        .HasForeignKey("LocadoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.Model.Models.LocacaoCarro", b =>
                {
                    b.HasOne("Api.Model.Models.Carros", "Carros")
                        .WithMany("LocacaoCarro")
                        .HasForeignKey("IdCarro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Api.Model.Models.Locacao", "Locacao")
                        .WithMany("LocacaoCarro")
                        .HasForeignKey("IdLocacao")
                        .HasConstraintName("FK_LocacoesCarros_Locacao_IdLocacao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
